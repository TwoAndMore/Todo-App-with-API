{"version":3,"sources":["utils/fetchClient.ts","Enums/SortBy.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/TodoAppHeader/TodoAppHeader.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoAppMain/TodoAppMain.tsx","components/TodoAppFooter/TodoAppFooter.tsx","Enums/ErrorType.ts","api/todos.ts","components/TodoApp/TodoApp.tsx","components/ErrorNotification/ErrorNotification.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","SortBy","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","TodoAppHeader","props","handleCreateTodo","handleUpdateAllTodosStatus","todos","newTodoTitle","setNewTodoTitle","data-cy","active","every","todo","completed","onClick","TodoItem","selectedTodo","setSelectedTodo","handleDeleteTodo","handleUpdateTodoStatus","handleRenameTodo","isLoading","title","setTitle","editField","useRef","isChanging","current","focus","handleSubmitForm","defaultChecked","defaultValue","onBlur","ref","onDoubleClick","TodoList","loadingTodosID","map","todoId","includes","TodoAppMain","ErrorType","TodoAppFooter","sortBy","setSortBy","handleCompletedTodosClear","completedTodos","filter","length","handleSortBy","sortByNumber","href","selected","All","Active","Completed","style","opacity","cursor","updateTodo","TodoApp","allTodos","setTodos","setErrorType","setLoadingTodosID","Default","prev","deleteTodo","catch","Delete","oldTodo","Update","finally","item","trim","WrongTitle","optimisticResponseId","optimisticTodo","userId","Create","createdTodo","forEach","ErrorNotification","errorType","Add","getErrorText","App","useContext","setIsLoading","selectedTodos","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5a4ebc81.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum SortBy {\n  All,\n  Active,\n  Completed,\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleCreateTodo: CallableFunction,\n  handleUpdateAllTodosStatus: () => void,\n};\n\nexport const TodoAppHeader: React.FC<Props> = (props) => {\n  const {\n    handleCreateTodo,\n    handleUpdateAllTodosStatus,\n    todos,\n  } = props;\n\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n\n  const handleFormSubmit = (event: FormEvent) => {\n    handleCreateTodo(event, newTodoTitle);\n    setNewTodoTitle('');\n  };\n\n  const isAllTodosActive = () => todos.every(todo => todo.completed);\n\n  return (\n    <header className=\"todoapp__header\">\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <button\n        data-cy=\"ToggleAllButton\"\n        type=\"button\"\n        className={classNames(\n          'todoapp__toggle-all',\n          {\n            active: isAllTodosActive(),\n          },\n        )}\n        onClick={handleUpdateAllTodosStatus}\n      />\n\n      <form onSubmit={handleFormSubmit}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodoTitle}\n          onChange={(event) => setNewTodoTitle(event.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n  handleDeleteTodo: (todoId: number) => void,\n  handleUpdateTodoStatus: (todo: Todo) => void,\n  handleRenameTodo: (todo: Todo, title: string) => void,\n  isLoading: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  setSelectedTodo,\n  handleDeleteTodo,\n  handleUpdateTodoStatus,\n  handleRenameTodo,\n  isLoading,\n}) => {\n  const [title, setTitle] = useState(todo.title);\n\n  const editField = useRef<HTMLInputElement>(null);\n\n  const isChanging = selectedTodo?.id === todo.id;\n\n  useEffect(() => {\n    if (editField.current) {\n      editField.current.focus();\n    }\n  }, [isChanging]);\n\n  const handleSubmitForm = () => {\n    setSelectedTodo(null);\n    handleRenameTodo(todo, title);\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames(\n        'todo',\n        {\n          completed: todo.completed,\n        },\n      )}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          defaultChecked\n          onClick={() => handleUpdateTodoStatus(todo)}\n        />\n      </label>\n\n      {!isChanging ? (\n        <>\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={() => setSelectedTodo(todo)}\n          >\n            {todo.title}\n          </span>\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDeleteButton\"\n            onClick={() => handleDeleteTodo(todo.id)}\n          >\n            ×\n          </button>\n        </>\n      ) : (\n        <form\n          onSubmit={handleSubmitForm}\n        >\n          <input\n            data-cy=\"TodoTitleField\"\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            defaultValue={todo.title}\n            onChange={(event) => setTitle(event.target.value)}\n            onBlur={handleSubmitForm}\n            ref={editField}\n          />\n        </form>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames(\n          'modal',\n          'overlay',\n          {\n            'is-active': isLoading,\n          },\n        )}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  handleDeleteTodo: (todoId: number) => void,\n  handleUpdateTodoStatus: (todo: Todo) => void,\n  handleRenameTodo: (todo: Todo, title: string) => void,\n  loadingTodosID: number[],\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    handleDeleteTodo,\n    handleRenameTodo,\n    handleUpdateTodoStatus,\n    loadingTodosID,\n  } = props;\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const isTodoLoading = (todoId: number) => loadingTodosID.includes(todoId);\n\n  return (\n    <>\n      {todos.map((todo: Todo) => (\n        <TodoItem\n          todo={todo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          handleDeleteTodo={handleDeleteTodo}\n          handleRenameTodo={handleRenameTodo}\n          handleUpdateTodoStatus={handleUpdateTodoStatus}\n          isLoading={isTodoLoading(todo.id)}\n          key={todo.id}\n        />\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoList } from '../TodoList/TodoList';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleDeleteTodo: (todoId: number) => void,\n  handleUpdateTodoStatus: (todo: Todo) => void,\n  handleRenameTodo: (todo: Todo, title: string) => void,\n  loadingTodosID: number[],\n};\n\nexport const TodoAppMain: React.FC<Props> = (props) => {\n  const {\n    todos,\n    handleDeleteTodo,\n    handleRenameTodo,\n    handleUpdateTodoStatus,\n    loadingTodosID,\n  } = props;\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      <TodoList\n        todos={todos}\n        loadingTodosID={loadingTodosID}\n        handleUpdateTodoStatus={handleUpdateTodoStatus}\n        handleRenameTodo={handleRenameTodo}\n        handleDeleteTodo={handleDeleteTodo}\n      />\n    </section>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { SortBy } from '../../Enums/SortBy';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  sortBy: number,\n  setSortBy: CallableFunction,\n  handleCompletedTodosClear: CallableFunction,\n};\n\nexport const TodoAppFooter: React.FC<Props> = (props) => {\n  const {\n    todos,\n    sortBy,\n    setSortBy,\n    handleCompletedTodosClear,\n  } = props;\n\n  const todosLeft = () => todos.filter(todo => !todo.completed).length;\n  const completedTodos = () => todos.filter(todo => todo.completed).length;\n  const handleSortBy = (sortByNumber: number) => setSortBy(sortByNumber);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todosLeft()} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames(\n            'filter__link',\n            {\n              selected: SortBy.All === sortBy,\n            },\n          )}\n          onClick={() => handleSortBy(SortBy.All)}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames(\n            'filter__link',\n            {\n              selected: SortBy.Active === sortBy,\n            },\n          )}\n          onClick={() => handleSortBy(SortBy.Active)}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link',\n            {\n              selected: SortBy.Completed === sortBy,\n            },\n          )}\n          onClick={() => handleSortBy(SortBy.Completed)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={() => handleCompletedTodosClear()}\n        style={{\n          opacity: completedTodos() > 0 ? '100%' : '0%',\n          cursor: completedTodos() > 0 ? 'pointer' : 'auto',\n        }}\n      >\n        Clear completed\n      </button>\n\n    </footer>\n  );\n};\n","export enum ErrorType {\n  Default,\n  Delete,\n  Add,\n  Update,\n  WrongTitle,\n  Create,\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (data: { }) => {\n  return client.post('/todos', data);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = (todoId: number, data: { }) => {\n  return client.patch(`/todos/${todoId}`, data);\n};\n","import React, { FormEvent, useState } from 'react';\nimport { TodoAppHeader } from '../TodoAppHeader/TodoAppHeader';\nimport { TodoAppMain } from '../TodoAppMain/TodoAppMain';\nimport { TodoAppFooter } from '../TodoAppFooter/TodoAppFooter';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { createTodo, deleteTodo, updateTodo } from '../../api/todos';\nimport { ErrorType } from '../../Enums/ErrorType';\n\ntype Props = {\n  isLoading: boolean,\n  todos: Todo[],\n  allTodos: Todo[],\n  setTodos: CallableFunction,\n  user: User,\n  sortBy: number,\n  setSortBy: CallableFunction,\n  setErrorType: CallableFunction,\n};\n\nexport const TodoApp: React.FC<Props> = (props) => {\n  const {\n    isLoading,\n    todos,\n    allTodos,\n    setTodos,\n    user,\n    sortBy,\n    setSortBy,\n    setErrorType,\n  } = props;\n\n  const [loadingTodosID, setLoadingTodosID] = useState<number[]>([]);\n\n  const handleDeleteTodo = (todoId: number): void => {\n    setErrorType(ErrorType.Default);\n\n    setLoadingTodosID(prev => [...prev, todoId]);\n\n    deleteTodo(todoId)\n      .then(() => {\n        setTodos((prev: Todo[]) => prev.filter(todo => todo.id !== todoId));\n      })\n      .catch(() => {\n        setErrorType(ErrorType.Delete);\n      });\n  };\n\n  const handleUpdateTodoStatus = (todo: Todo): void => {\n    setErrorType(ErrorType.Default);\n\n    setLoadingTodosID(prev => [...prev, todo.id]);\n\n    updateTodo(todo.id, {\n      completed: !todo.completed,\n    })\n      .then(() => {\n        setTodos((prev: Todo[]) => prev.map(oldTodo => {\n          if (oldTodo.id === todo.id) {\n            return {\n              ...oldTodo,\n              completed: !oldTodo.completed,\n            };\n          }\n\n          return oldTodo;\n        }));\n      })\n      .catch(() => {\n        setErrorType(ErrorType.Update);\n      })\n      .finally(() => {\n        setLoadingTodosID(prev => prev.filter(item => item !== todo.id));\n      });\n  };\n\n  const handleRenameTodo = (todo: Todo, title: string): void => {\n    setErrorType(ErrorType.Default);\n\n    if (todo.title === title) {\n      return;\n    }\n\n    if (title.trim().length <= 0) {\n      handleDeleteTodo(todo.id);\n    } else {\n      setLoadingTodosID(prev => [...prev, todo.id]);\n\n      updateTodo(todo.id, {\n        title,\n      })\n        .then(() => {\n          setTodos((prev: Todo[]) => prev.map(oldTodo => {\n            if (oldTodo.id === todo.id) {\n              return {\n                ...oldTodo,\n                title,\n              };\n            }\n\n            return oldTodo;\n          }));\n        })\n        .catch(() => {\n          setErrorType(ErrorType.Update);\n        })\n        .finally(() => {\n          setLoadingTodosID(prev => prev.filter(item => item !== todo.id));\n        });\n    }\n  };\n\n  const handleCreateTodo = async (event: FormEvent, title: string) => {\n    setErrorType(ErrorType.Default);\n\n    event.preventDefault();\n\n    if (title.trim().length <= 0) {\n      setErrorType(ErrorType.WrongTitle);\n\n      return;\n    }\n\n    const optimisticResponseId = -(todos.length);\n    const optimisticTodo = {\n      id: optimisticResponseId,\n      title,\n      userId: user.id,\n      completed: false,\n    };\n\n    setTodos((prev: Todo[]) => [...prev, optimisticTodo]);\n    setLoadingTodosID(prev => [...prev, optimisticResponseId]);\n\n    const createdTodo = await createTodo({\n      title,\n      userId: user.id,\n      completed: false,\n    })\n      .catch(() => {\n        setErrorType(ErrorType.Create);\n      });\n\n    setTodos((prev: Todo[]) => prev.map(todo => {\n      return todo.id === optimisticResponseId\n        ? createdTodo\n        : todo;\n    }));\n  };\n\n  const handleUpdateAllTodosStatus = (): void => {\n    const isAllCompleted = todos.every(todo => todo.completed);\n\n    if (isAllCompleted) {\n      todos.forEach(todo => handleUpdateTodoStatus(todo));\n    } else {\n      todos.forEach(todo => {\n        if (todo.completed === false) {\n          handleUpdateTodoStatus(todo);\n        }\n      });\n    }\n  };\n\n  const handleCompletedTodosClear = (): void => {\n    const completedTodos = todos.filter(todo => todo.completed);\n\n    completedTodos.forEach(todo => handleDeleteTodo(todo.id));\n  };\n\n  return (\n    <div className=\"todoapp__content\">\n      <TodoAppHeader\n        todos={todos}\n        handleUpdateAllTodosStatus={handleUpdateAllTodosStatus}\n        handleCreateTodo={handleCreateTodo}\n      />\n\n      {!isLoading && allTodos.length > 0 && (\n        <>\n          {todos.length > 0 && (\n            <TodoAppMain\n              todos={todos}\n              handleDeleteTodo={handleDeleteTodo}\n              handleRenameTodo={handleRenameTodo}\n              handleUpdateTodoStatus={handleUpdateTodoStatus}\n              loadingTodosID={loadingTodosID}\n            />\n          )}\n\n          <TodoAppFooter\n            todos={todos}\n            sortBy={sortBy}\n            setSortBy={setSortBy}\n            handleCompletedTodosClear={handleCompletedTodosClear}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { ErrorType } from '../../Enums/ErrorType';\n\ntype Props = {\n  errorType: number,\n  setErrorType: CallableFunction,\n};\n\nexport const ErrorNotification: React.FC<Props> = (props) => {\n  const { errorType, setErrorType } = props;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setErrorType(ErrorType.Default);\n    }, 3000);\n  }, []);\n\n  const getErrorText = (): string => {\n    switch (errorType) {\n      case ErrorType.Delete:\n        return 'Unable to delete a todo';\n      case ErrorType.Add:\n        return 'Unable to add a todo';\n      case ErrorType.Update:\n        return 'Unable to update a todo';\n      case ErrorType.WrongTitle:\n        return 'Title can\\'t be empty';\n      case ErrorType.Create:\n        return 'Unable to add a todo';\n      case ErrorType.Default:\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className=\"notification is-danger is-light has-text-weight-normal\"\n    >\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <button\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => setErrorType(ErrorType.Default)}\n      />\n\n      {getErrorText()}\n    </div>\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport {\n  ErrorNotification,\n} from './components/ErrorNotification/ErrorNotification';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api/todos';\nimport { SortBy } from './Enums/SortBy';\nimport { ErrorType } from './Enums/ErrorType';\n\nexport const App: React.FC = () => {\n  const user = useContext(AuthContext);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortBy, setSortBy] = useState(0);\n  const [errorType, setErrorType] = useState(0);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (user) {\n      getTodos(user.id)\n        .then(setTodos)\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n\n  const selectedTodos = () => {\n    switch (sortBy) {\n      case SortBy.Active:\n        return todos.filter(todo => !todo.completed);\n      case SortBy.Completed:\n        return todos.filter(todo => todo.completed);\n      case SortBy.All:\n      default:\n        return todos;\n    }\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      {user && (\n        <>\n          <TodoApp\n            isLoading={isLoading}\n            todos={selectedTodos()}\n            setTodos={setTodos}\n            allTodos={todos}\n            user={user}\n            sortBy={sortBy}\n            setSortBy={setSortBy}\n            setErrorType={setErrorType}\n          />\n\n          {errorType !== ErrorType.Default && (\n            <ErrorNotification\n              errorType={errorType}\n              setErrorType={setErrorType}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport React from 'react';\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root: React.FC = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}